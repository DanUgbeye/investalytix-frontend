import { NullableNumberSchema, NullableStringSchema } from "@/validation";
import { ZodType, z } from "zod";
import {
  BalanceSheetStatement,
  BalanceSheetStatementGrowth,
  CashFlowStatement,
  CashFlowStatementGrowth,
  FinancialGrowth,
  FinancialPeriod,
  Financials,
  IncomeStatement,
  IncomeStatementGrowth,
  Ratio,
  RatioTTM,
  SecFiling,
} from "../types";

export const RatioTTMSchema = z.object({
  dividendYielTTM: NullableNumberSchema,
  dividendYielPercentageTTM: NullableNumberSchema,
  peRatioTTM: NullableNumberSchema,
  pegRatioTTM: NullableNumberSchema,
  payoutRatioTTM: NullableNumberSchema,
  currentRatioTTM: NullableNumberSchema,
  quickRatioTTM: NullableNumberSchema,
  cashRatioTTM: NullableNumberSchema,
  daysOfSalesOutstandingTTM: NullableNumberSchema,
  daysOfInventoryOutstandingTTM: NullableNumberSchema,
  operatingCycleTTM: NullableNumberSchema,
  daysOfPayablesOutstandingTTM: NullableNumberSchema,
  cashConversionCycleTTM: NullableNumberSchema,
  grossProfitMarginTTM: NullableNumberSchema,
  operatingProfitMarginTTM: NullableNumberSchema,
  pretaxProfitMarginTTM: NullableNumberSchema,
  netProfitMarginTTM: NullableNumberSchema,
  effectiveTaxRateTTM: NullableNumberSchema,
  returnOnAssetsTTM: NullableNumberSchema,
  returnOnEquityTTM: NullableNumberSchema,
  returnOnCapitalEmployedTTM: NullableNumberSchema,
  netIncomePerEBTTTM: NullableNumberSchema,
  ebtPerEbitTTM: NullableNumberSchema,
  ebitPerRevenueTTM: NullableNumberSchema,
  debtRatioTTM: NullableNumberSchema,
  debtEquityRatioTTM: NullableNumberSchema,
  longTermDebtToCapitalizationTTM: NullableNumberSchema,
  totalDebtToCapitalizationTTM: NullableNumberSchema,
  interestCoverageTTM: NullableNumberSchema,
  cashFlowToDebtRatioTTM: NullableNumberSchema,
  companyEquityMultiplierTTM: NullableNumberSchema,
  receivablesTurnoverTTM: NullableNumberSchema,
  payablesTurnoverTTM: NullableNumberSchema,
  inventoryTurnoverTTM: NullableNumberSchema,
  fixedAssetTurnoverTTM: NullableNumberSchema,
  assetTurnoverTTM: NullableNumberSchema,
  operatingCashFlowPerShareTTM: NullableNumberSchema,
  freeCashFlowPerShareTTM: NullableNumberSchema,
  cashPerShareTTM: NullableNumberSchema,
  operatingCashFlowSalesRatioTTM: NullableNumberSchema,
  freeCashFlowOperatingCashFlowRatioTTM: NullableNumberSchema,
  cashFlowCoverageRatiosTTM: NullableNumberSchema,
  shortTermCoverageRatiosTTM: NullableNumberSchema,
  capitalExpenditureCoverageRatioTTM: NullableNumberSchema,
  dividendPaidAndCapexCoverageRatioTTM: NullableNumberSchema,
  priceBookValueRatioTTM: NullableNumberSchema,
  priceToBookRatioTTM: NullableNumberSchema,
  priceToSalesRatioTTM: NullableNumberSchema,
  priceEarningsRatioTTM: NullableNumberSchema,
  priceToFreeCashFlowsRatioTTM: NullableNumberSchema,
  priceToOperatingCashFlowsRatioTTM: NullableNumberSchema,
  priceCashFlowRatioTTM: NullableNumberSchema,
  priceEarningsToGrowthRatioTTM: NullableNumberSchema,
  priceSalesRatioTTM: NullableNumberSchema,
  enterpriseValueMultipleTTM: NullableNumberSchema,
  priceFairValueTTM: NullableNumberSchema,
  dividendPerShareTTM: NullableNumberSchema,
}) satisfies ZodType<RatioTTM>;

export const RatioSchema = z.object({
  symbol: z.string(),
  date: z.coerce.date(),
  calendarYear: z.string(),
  period: z.string(),
  currentRatio: NullableNumberSchema,
  quickRatio: NullableNumberSchema,
  cashRatio: NullableNumberSchema,
  daysOfSalesOutstanding: NullableNumberSchema,
  daysOfInventoryOutstanding: NullableNumberSchema,
  operatingCycle: NullableNumberSchema,
  daysOfPayablesOutstanding: NullableNumberSchema,
  cashConversionCycle: NullableNumberSchema,
  grossProfitMargin: NullableNumberSchema,
  operatingProfitMargin: NullableNumberSchema,
  pretaxProfitMargin: NullableNumberSchema,
  netProfitMargin: NullableNumberSchema,
  effectiveTaxRate: NullableNumberSchema,
  returnOnAssets: NullableNumberSchema,
  returnOnEquity: NullableNumberSchema,
  returnOnCapitalEmployed: NullableNumberSchema,
  netIncomePerEBT: NullableNumberSchema,
  ebtPerEbit: NullableNumberSchema,
  ebitPerRevenue: NullableNumberSchema,
  debtRatio: NullableNumberSchema,
  debtEquityRatio: NullableNumberSchema,
  longTermDebtToCapitalization: NullableNumberSchema,
  totalDebtToCapitalization: NullableNumberSchema,
  interestCoverage: NullableNumberSchema,
  cashFlowToDebtRatio: NullableNumberSchema,
  companyEquityMultiplier: NullableNumberSchema,
  receivablesTurnover: NullableNumberSchema,
  payablesTurnover: NullableNumberSchema,
  inventoryTurnover: NullableNumberSchema,
  fixedAssetTurnover: NullableNumberSchema,
  assetTurnover: NullableNumberSchema,
  operatingCashFlowPerShare: NullableNumberSchema,
  freeCashFlowPerShare: NullableNumberSchema,
  cashPerShare: NullableNumberSchema,
  payoutRatio: NullableNumberSchema,
  operatingCashFlowSalesRatio: NullableNumberSchema,
  freeCashFlowOperatingCashFlowRatio: NullableNumberSchema,
  cashFlowCoverageRatios: NullableNumberSchema,
  shortTermCoverageRatios: NullableNumberSchema,
  capitalExpenditureCoverageRatio: NullableNumberSchema,
  dividendPaidAndCapexCoverageRatio: NullableNumberSchema,
  dividendPayoutRatio: NullableNumberSchema,
  priceBookValueRatio: NullableNumberSchema,
  priceToBookRatio: NullableNumberSchema,
  priceToSalesRatio: NullableNumberSchema,
  priceEarningsRatio: NullableNumberSchema,
  priceToFreeCashFlowsRatio: NullableNumberSchema,
  priceToOperatingCashFlowsRatio: NullableNumberSchema,
  priceCashFlowRatio: NullableNumberSchema,
  priceEarningsToGrowthRatio: NullableNumberSchema,
  priceSalesRatio: NullableNumberSchema,
  dividendYield: NullableNumberSchema,
  enterpriseValueMultiple: NullableNumberSchema,
  priceFairValue: NullableNumberSchema,
}) satisfies ZodType<Ratio>;

export const FinancialPeriodSchema = z.enum([
  "annual",
  "quarter",
]) satisfies ZodType<FinancialPeriod>;

export const IncomeStatementSchema = z.object({
  date: z.coerce.date(),
  symbol: z.string(),
  reportedCurrency: z.string(),
  cik: z.string(),
  fillingDate: z.coerce.date(),
  acceptedDate: z.coerce.date(),
  calendarYear: z.string(),
  period: z.string(),
  revenue: NullableNumberSchema,
  costOfRevenue: NullableNumberSchema,
  grossProfit: NullableNumberSchema,
  grossProfitRatio: NullableNumberSchema,
  researchAndDevelopmentExpenses: NullableNumberSchema,
  generalAndAdministrativeExpenses: NullableNumberSchema,
  sellingAndMarketingExpenses: NullableNumberSchema,
  sellingGeneralAndAdministrativeExpenses: NullableNumberSchema,
  otherExpenses: NullableNumberSchema,
  operatingExpenses: NullableNumberSchema,
  costAndExpenses: NullableNumberSchema,
  interestIncome: NullableNumberSchema,
  interestExpense: NullableNumberSchema,
  depreciationAndAmortization: NullableNumberSchema,
  ebitda: NullableNumberSchema,
  ebitdaratio: NullableNumberSchema,
  operatingIncome: NullableNumberSchema,
  operatingIncomeRatio: NullableNumberSchema,
  totalOtherIncomeExpensesNet: NullableNumberSchema,
  incomeBeforeTax: NullableNumberSchema,
  incomeBeforeTaxRatio: NullableNumberSchema,
  incomeTaxExpense: NullableNumberSchema,
  netIncome: NullableNumberSchema,
  netIncomeRatio: NullableNumberSchema,
  eps: NullableNumberSchema,
  epsdiluted: NullableNumberSchema,
  weightedAverageShsOut: NullableNumberSchema,
  weightedAverageShsOutDil: NullableNumberSchema,
  link: NullableStringSchema,
  finalLink: NullableStringSchema,
}) satisfies ZodType<IncomeStatement>;

export const BalanceSheetStatementSchema = z.object({
  date: z.coerce.date(),
  symbol: z.string(),
  reportedCurrency: z.string(),
  cik: z.string(),
  fillingDate: z.coerce.date(),
  acceptedDate: z.coerce.date(),
  calendarYear: z.string(),
  period: z.string(),
  cashAndCashEquivalents: NullableNumberSchema,
  shortTermInvestments: NullableNumberSchema,
  cashAndShortTermInvestments: NullableNumberSchema,
  netReceivables: NullableNumberSchema,
  inventory: NullableNumberSchema,
  otherCurrentAssets: NullableNumberSchema,
  totalCurrentAssets: NullableNumberSchema,
  propertyPlantEquipmentNet: NullableNumberSchema,
  goodwill: NullableNumberSchema,
  intangibleAssets: NullableNumberSchema,
  goodwillAndIntangibleAssets: NullableNumberSchema,
  longTermInvestments: NullableNumberSchema,
  taxAssets: NullableNumberSchema,
  otherNonCurrentAssets: NullableNumberSchema,
  totalNonCurrentAssets: NullableNumberSchema,
  otherAssets: NullableNumberSchema,
  totalAssets: NullableNumberSchema,
  accountPayables: NullableNumberSchema,
  shortTermDebt: NullableNumberSchema,
  taxPayables: NullableNumberSchema,
  deferredRevenue: NullableNumberSchema,
  otherCurrentLiabilities: NullableNumberSchema,
  totalCurrentLiabilities: NullableNumberSchema,
  longTermDebt: NullableNumberSchema,
  deferredRevenueNonCurrent: NullableNumberSchema,
  deferredTaxLiabilitiesNonCurrent: NullableNumberSchema,
  otherNonCurrentLiabilities: NullableNumberSchema,
  totalNonCurrentLiabilities: NullableNumberSchema,
  otherLiabilities: NullableNumberSchema,
  capitalLeaseObligations: NullableNumberSchema,
  totalLiabilities: NullableNumberSchema,
  preferredStock: NullableNumberSchema,
  commonStock: NullableNumberSchema,
  retainedEarnings: NullableNumberSchema,
  accumulatedOtherComprehensiveIncomeLoss: NullableNumberSchema,
  othertotalStockholdersEquity: NullableNumberSchema,
  totalStockholdersEquity: NullableNumberSchema,
  totalEquity: NullableNumberSchema,
  totalLiabilitiesAndStockholdersEquity: NullableNumberSchema,
  minorityInterest: NullableNumberSchema,
  totalLiabilitiesAndTotalEquity: NullableNumberSchema,
  totalInvestments: NullableNumberSchema,
  totalDebt: NullableNumberSchema,
  netDebt: NullableNumberSchema,
  link: NullableStringSchema,
  finalLink: NullableStringSchema,
}) satisfies ZodType<BalanceSheetStatement>;

export const CashFlowStatementSchema = z.object({
  date: z.coerce.date(),
  symbol: z.string(),
  reportedCurrency: z.string(),
  cik: z.string(),
  fillingDate: z.coerce.date(),
  acceptedDate: z.coerce.date(),
  calendarYear: z.string(),
  period: z.string(),
  netIncome: NullableNumberSchema,
  depreciationAndAmortization: NullableNumberSchema,
  deferredIncomeTax: NullableNumberSchema,
  stockBasedCompensation: NullableNumberSchema,
  changeInWorkingCapital: NullableNumberSchema,
  accountsReceivables: NullableNumberSchema,
  inventory: NullableNumberSchema,
  accountsPayables: NullableNumberSchema,
  otherWorkingCapital: NullableNumberSchema,
  otherNonCashItems: NullableNumberSchema,
  netCashProvidedByOperatingActivities: NullableNumberSchema,
  investmentsInPropertyPlantAndEquipment: NullableNumberSchema,
  acquisitionsNet: NullableNumberSchema,
  purchasesOfInvestments: NullableNumberSchema,
  salesMaturitiesOfInvestments: NullableNumberSchema,
  otherInvestingActivites: NullableNumberSchema,
  netCashUsedForInvestingActivites: NullableNumberSchema,
  debtRepayment: NullableNumberSchema,
  commonStockIssued: NullableNumberSchema,
  commonStockRepurchased: NullableNumberSchema,
  dividendsPaid: NullableNumberSchema,
  otherFinancingActivites: NullableNumberSchema,
  netCashUsedProvidedByFinancingActivities: NullableNumberSchema,
  effectOfForexChangesOnCash: NullableNumberSchema,
  netChangeInCash: NullableNumberSchema,
  cashAtEndOfPeriod: NullableNumberSchema,
  cashAtBeginningOfPeriod: NullableNumberSchema,
  operatingCashFlow: NullableNumberSchema,
  capitalExpenditure: NullableNumberSchema,
  freeCashFlow: NullableNumberSchema,
  link: NullableStringSchema,
  finalLink: NullableStringSchema,
}) satisfies ZodType<CashFlowStatement>;

export const FinancialsSchema = z.object({
  income: z.array(IncomeStatementSchema),
  balance: z.array(BalanceSheetStatementSchema),
  cash: z.array(CashFlowStatementSchema),
}) satisfies ZodType<Financials>;

export const SecFilingSchema = z.object({
  symbol: z.string(),
  fillingDate: z.coerce.date(),
  acceptedDate: z.coerce.date(),
  cik: z.string(),
  type: z.string(),
  link: z.string(),
  finalLink: z.string(),
}) satisfies ZodType<SecFiling>;

export const FinancialGrowthSchema = z.object({
  symbol: z.string(),
  date: z.coerce.date(),
  calendarYear: z.string(),
  period: z.string(),
  revenueGrowth: NullableNumberSchema,
  grossProfitGrowth: NullableNumberSchema,
  ebitgrowth: NullableNumberSchema,
  operatingIncomeGrowth: NullableNumberSchema,
  netIncomeGrowth: NullableNumberSchema,
  epsgrowth: NullableNumberSchema,
  epsdilutedGrowth: NullableNumberSchema,
  weightedAverageSharesGrowth: NullableNumberSchema,
  weightedAverageSharesDilutedGrowth: NullableNumberSchema,
  dividendsperShareGrowth: NullableNumberSchema,
  operatingCashFlowGrowth: NullableNumberSchema,
  freeCashFlowGrowth: NullableNumberSchema,
  tenYRevenueGrowthPerShare: NullableNumberSchema,
  fiveYRevenueGrowthPerShare: NullableNumberSchema,
  threeYRevenueGrowthPerShare: NullableNumberSchema,
  tenYOperatingCFGrowthPerShare: NullableNumberSchema,
  fiveYOperatingCFGrowthPerShare: NullableNumberSchema,
  threeYOperatingCFGrowthPerShare: NullableNumberSchema,
  tenYNetIncomeGrowthPerShare: NullableNumberSchema,
  fiveYNetIncomeGrowthPerShare: NullableNumberSchema,
  threeYNetIncomeGrowthPerShare: NullableNumberSchema,
  tenYShareholdersEquityGrowthPerShare: NullableNumberSchema,
  fiveYShareholdersEquityGrowthPerShare: NullableNumberSchema,
  threeYShareholdersEquityGrowthPerShare: NullableNumberSchema,
  tenYDividendperShareGrowthPerShare: NullableNumberSchema,
  fiveYDividendperShareGrowthPerShare: NullableNumberSchema,
  threeYDividendperShareGrowthPerShare: NullableNumberSchema,
  receivablesGrowth: NullableNumberSchema,
  inventoryGrowth: NullableNumberSchema,
  assetGrowth: NullableNumberSchema,
  bookValueperShareGrowth: NullableNumberSchema,
  debtGrowth: NullableNumberSchema,
  rdexpenseGrowth: NullableNumberSchema,
  sgaexpensesGrowth: NullableNumberSchema,
}) satisfies ZodType<FinancialGrowth>;

export const BalanceSheetStatementGrowthSchema = z.object({
  date: z.coerce.date(),
  symbol: z.string(),
  calendarYear: z.string(),
  period: z.string(),
  growthCashAndCashEquivalents: NullableNumberSchema,
  growthShortTermInvestments: NullableNumberSchema,
  growthCashAndShortTermInvestments: NullableNumberSchema,
  growthNetReceivables: NullableNumberSchema,
  growthInventory: NullableNumberSchema,
  growthOtherCurrentAssets: NullableNumberSchema,
  growthTotalCurrentAssets: NullableNumberSchema,
  growthPropertyPlantEquipmentNet: NullableNumberSchema,
  growthGoodwill: NullableNumberSchema,
  growthIntangibleAssets: NullableNumberSchema,
  growthGoodwillAndIntangibleAssets: NullableNumberSchema,
  growthLongTermInvestments: NullableNumberSchema,
  growthTaxAssets: NullableNumberSchema,
  growthOtherNonCurrentAssets: NullableNumberSchema,
  growthTotalNonCurrentAssets: NullableNumberSchema,
  growthOtherAssets: NullableNumberSchema,
  growthTotalAssets: NullableNumberSchema,
  growthAccountPayables: NullableNumberSchema,
  growthShortTermDebt: NullableNumberSchema,
  growthTaxPayables: NullableNumberSchema,
  growthDeferredRevenue: NullableNumberSchema,
  growthOtherCurrentLiabilities: NullableNumberSchema,
  growthTotalCurrentLiabilities: NullableNumberSchema,
  growthLongTermDebt: NullableNumberSchema,
  growthDeferredRevenueNonCurrent: NullableNumberSchema,
  growthDeferrredTaxLiabilitiesNonCurrent: NullableNumberSchema,
  growthOtherNonCurrentLiabilities: NullableNumberSchema,
  growthTotalNonCurrentLiabilities: NullableNumberSchema,
  growthOtherLiabilities: NullableNumberSchema,
  growthTotalLiabilities: NullableNumberSchema,
  growthCommonStock: NullableNumberSchema,
  growthRetainedEarnings: NullableNumberSchema,
  growthAccumulatedOtherComprehensiveIncomeLoss: NullableNumberSchema,
  growthOthertotalStockholdersEquity: NullableNumberSchema,
  growthTotalStockholdersEquity: NullableNumberSchema,
  growthTotalLiabilitiesAndStockholdersEquity: NullableNumberSchema,
  growthTotalInvestments: NullableNumberSchema,
  growthTotalDebt: NullableNumberSchema,
  growthNetDebt: NullableNumberSchema,
}) satisfies ZodType<BalanceSheetStatementGrowth>;

export const IncomeStatementGrowthSchema = z.object({
  date: z.coerce.date(),
  symbol: z.string(),
  calendarYear: z.string(),
  period: z.string(),
  growthRevenue: NullableNumberSchema,
  growthCostOfRevenue: NullableNumberSchema,
  growthGrossProfit: NullableNumberSchema,
  growthGrossProfitRatio: NullableNumberSchema,
  growthResearchAndDevelopmentExpenses: NullableNumberSchema,
  growthGeneralAndAdministrativeExpenses: NullableNumberSchema,
  growthSellingAndMarketingExpenses: NullableNumberSchema,
  growthOtherExpenses: NullableNumberSchema,
  growthOperatingExpenses: NullableNumberSchema,
  growthCostAndExpenses: NullableNumberSchema,
  growthInterestExpense: NullableNumberSchema,
  growthDepreciationAndAmortization: NullableNumberSchema,
  growthEBITDA: NullableNumberSchema,
  growthEBITDARatio: NullableNumberSchema,
  growthOperatingIncome: NullableNumberSchema,
  growthOperatingIncomeRatio: NullableNumberSchema,
  growthTotalOtherIncomeExpensesNet: NullableNumberSchema,
  growthIncomeBeforeTax: NullableNumberSchema,
  growthIncomeBeforeTaxRatio: NullableNumberSchema,
  growthIncomeTaxExpense: NullableNumberSchema,
  growthNetIncome: NullableNumberSchema,
  growthNetIncomeRatio: NullableNumberSchema,
  growthEPS: NullableNumberSchema,
  growthEPSDiluted: NullableNumberSchema,
  growthWeightedAverageShsOut: NullableNumberSchema,
  growthWeightedAverageShsOutDil: NullableNumberSchema,
}) satisfies ZodType<IncomeStatementGrowth>;

export const CashFlowStatementGrowthSchema = z.object({
  date: z.coerce.date(),
  symbol: z.string(),
  calendarYear: z.string(),
  period: z.string(),
  growthNetIncome: NullableNumberSchema,
  growthDepreciationAndAmortization: NullableNumberSchema,
  growthDeferredIncomeTax: NullableNumberSchema,
  growthStockBasedCompensation: NullableNumberSchema,
  growthChangeInWorkingCapital: NullableNumberSchema,
  growthAccountsReceivables: NullableNumberSchema,
  growthInventory: NullableNumberSchema,
  growthAccountsPayables: NullableNumberSchema,
  growthOtherWorkingCapital: NullableNumberSchema,
  growthOtherNonCashItems: NullableNumberSchema,
  growthNetCashProvidedByOperatingActivites: NullableNumberSchema,
  growthInvestmentsInPropertyPlantAndEquipment: NullableNumberSchema,
  growthAcquisitionsNet: NullableNumberSchema,
  growthPurchasesOfInvestments: NullableNumberSchema,
  growthSalesMaturitiesOfInvestments: NullableNumberSchema,
  growthOtherInvestingActivites: NullableNumberSchema,
  growthNetCashUsedForInvestingActivites: NullableNumberSchema,
  growthDebtRepayment: NullableNumberSchema,
  growthCommonStockIssued: NullableNumberSchema,
  growthCommonStockRepurchased: NullableNumberSchema,
  growthDividendsPaid: NullableNumberSchema,
  growthOtherFinancingActivites: NullableNumberSchema,
  growthNetCashUsedProvidedByFinancingActivities: NullableNumberSchema,
  growthEffectOfForexChangesOnCash: NullableNumberSchema,
  growthNetChangeInCash: NullableNumberSchema,
  growthCashAtEndOfPeriod: NullableNumberSchema,
  growthCashAtBeginningOfPeriod: NullableNumberSchema,
  growthOperatingCashFlow: NullableNumberSchema,
  growthCapitalExpenditure: NullableNumberSchema,
  growthFreeCashFlow: NullableNumberSchema,
}) satisfies ZodType<CashFlowStatementGrowth>;
