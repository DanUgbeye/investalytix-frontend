import { ZodType, z } from "zod";
import {
  BalanceSheetStatement,
  BalanceSheetStatementGrowth,
  CashFlowStatement,
  CashFlowStatementGrowth,
  FinancialGrowth,
  FinancialPeriod,
  Financials,
  IncomeStatement,
  IncomeStatementGrowth,
  Ratio,
  RatioTTM,
  SecFiling,
} from "../types";

export const RatioTTMSchema = z.object({
  dividendYielTTM: z.number().nullable(),
  dividendYielPercentageTTM: z.number().nullable(),
  peRatioTTM: z.number().nullable(),
  pegRatioTTM: z.number().nullable(),
  payoutRatioTTM: z.number().nullable(),
  currentRatioTTM: z.number().nullable(),
  quickRatioTTM: z.number().nullable(),
  cashRatioTTM: z.number().nullable(),
  daysOfSalesOutstandingTTM: z.number().nullable(),
  daysOfInventoryOutstandingTTM: z.number().nullable(),
  operatingCycleTTM: z.number().nullable(),
  daysOfPayablesOutstandingTTM: z.number().nullable(),
  cashConversionCycleTTM: z.number().nullable(),
  grossProfitMarginTTM: z.number().nullable(),
  operatingProfitMarginTTM: z.number().nullable(),
  pretaxProfitMarginTTM: z.number().nullable(),
  netProfitMarginTTM: z.number().nullable(),
  effectiveTaxRateTTM: z.number().nullable(),
  returnOnAssetsTTM: z.number().nullable(),
  returnOnEquityTTM: z.number().nullable(),
  returnOnCapitalEmployedTTM: z.number().nullable(),
  netIncomePerEBTTTM: z.number().nullable(),
  ebtPerEbitTTM: z.number().nullable(),
  ebitPerRevenueTTM: z.number().nullable(),
  debtRatioTTM: z.number().nullable(),
  debtEquityRatioTTM: z.number().nullable(),
  longTermDebtToCapitalizationTTM: z.number().nullable(),
  totalDebtToCapitalizationTTM: z.number().nullable(),
  interestCoverageTTM: z.number().nullable(),
  cashFlowToDebtRatioTTM: z.number().nullable(),
  companyEquityMultiplierTTM: z.number().nullable(),
  receivablesTurnoverTTM: z.number().nullable(),
  payablesTurnoverTTM: z.number().nullable(),
  inventoryTurnoverTTM: z.number().nullable(),
  fixedAssetTurnoverTTM: z.number().nullable(),
  assetTurnoverTTM: z.number().nullable(),
  operatingCashFlowPerShareTTM: z.number().nullable(),
  freeCashFlowPerShareTTM: z.number().nullable(),
  cashPerShareTTM: z.number().nullable(),
  operatingCashFlowSalesRatioTTM: z.number().nullable(),
  freeCashFlowOperatingCashFlowRatioTTM: z.number().nullable(),
  cashFlowCoverageRatiosTTM: z.number().nullable(),
  shortTermCoverageRatiosTTM: z.number().nullable(),
  capitalExpenditureCoverageRatioTTM: z.number().nullable(),
  dividendPaidAndCapexCoverageRatioTTM: z.number().nullable(),
  priceBookValueRatioTTM: z.number().nullable(),
  priceToBookRatioTTM: z.number().nullable(),
  priceToSalesRatioTTM: z.number().nullable(),
  priceEarningsRatioTTM: z.number().nullable(),
  priceToFreeCashFlowsRatioTTM: z.number().nullable(),
  priceToOperatingCashFlowsRatioTTM: z.number().nullable(),
  priceCashFlowRatioTTM: z.number().nullable(),
  priceEarningsToGrowthRatioTTM: z.number().nullable(),
  priceSalesRatioTTM: z.number().nullable(),
  enterpriseValueMultipleTTM: z.number().nullable(),
  priceFairValueTTM: z.number().nullable(),
  dividendPerShareTTM: z.number().nullable(),
}) satisfies ZodType<RatioTTM>;

export const RatioSchema = z.object({
  symbol: z.string(),
  date: z.coerce.date(),
  calendarYear: z.string(),
  period: z.string(),
  currentRatio: z.number().nullable(),
  quickRatio: z.number().nullable(),
  cashRatio: z.number().nullable(),
  daysOfSalesOutstanding: z.number().nullable(),
  daysOfInventoryOutstanding: z.number().nullable(),
  operatingCycle: z.number().nullable(),
  daysOfPayablesOutstanding: z.number().nullable(),
  cashConversionCycle: z.number().nullable(),
  grossProfitMargin: z.number().nullable(),
  operatingProfitMargin: z.number().nullable(),
  pretaxProfitMargin: z.number().nullable(),
  netProfitMargin: z.number().nullable(),
  effectiveTaxRate: z.number().nullable(),
  returnOnAssets: z.number().nullable(),
  returnOnEquity: z.number().nullable(),
  returnOnCapitalEmployed: z.number().nullable(),
  netIncomePerEBT: z.number().nullable(),
  ebtPerEbit: z.number().nullable(),
  ebitPerRevenue: z.number().nullable(),
  debtRatio: z.number().nullable(),
  debtEquityRatio: z.number().nullable(),
  longTermDebtToCapitalization: z.number().nullable(),
  totalDebtToCapitalization: z.number().nullable(),
  interestCoverage: z.number().nullable(),
  cashFlowToDebtRatio: z.number().nullable(),
  companyEquityMultiplier: z.number().nullable(),
  receivablesTurnover: z.number().nullable(),
  payablesTurnover: z.number().nullable(),
  inventoryTurnover: z.number().nullable(),
  fixedAssetTurnover: z.number().nullable(),
  assetTurnover: z.number().nullable(),
  operatingCashFlowPerShare: z.number().nullable(),
  freeCashFlowPerShare: z.number().nullable(),
  cashPerShare: z.number().nullable(),
  payoutRatio: z.number().nullable(),
  operatingCashFlowSalesRatio: z.number().nullable(),
  freeCashFlowOperatingCashFlowRatio: z.number().nullable(),
  cashFlowCoverageRatios: z.number().nullable(),
  shortTermCoverageRatios: z.number().nullable(),
  capitalExpenditureCoverageRatio: z.number().nullable(),
  dividendPaidAndCapexCoverageRatio: z.number().nullable(),
  dividendPayoutRatio: z.number().nullable(),
  priceBookValueRatio: z.number().nullable(),
  priceToBookRatio: z.number().nullable(),
  priceToSalesRatio: z.number().nullable(),
  priceEarningsRatio: z.number().nullable(),
  priceToFreeCashFlowsRatio: z.number().nullable(),
  priceToOperatingCashFlowsRatio: z.number().nullable(),
  priceCashFlowRatio: z.number().nullable(),
  priceEarningsToGrowthRatio: z.number().nullable(),
  priceSalesRatio: z.number().nullable(),
  dividendYield: z.number().nullable(),
  enterpriseValueMultiple: z.number().nullable(),
  priceFairValue: z.number().nullable(),
}) satisfies ZodType<Ratio>;

export const FinancialPeriodSchema = z.enum([
  "annual",
  "quarter",
]) satisfies ZodType<FinancialPeriod>;

export const IncomeStatementSchema = z.object({
  date: z.coerce.date(),
  symbol: z.string(),
  reportedCurrency: z.string(),
  cik: z.string(),
  fillingDate: z.coerce.date(),
  acceptedDate: z.coerce.date(),
  calendarYear: z.string(),
  period: z.string(),
  revenue: z.number(),
  costOfRevenue: z.number(),
  grossProfit: z.number(),
  grossProfitRatio: z.number(),
  researchAndDevelopmentExpenses: z.number(),
  generalAndAdministrativeExpenses: z.number(),
  sellingAndMarketingExpenses: z.number(),
  sellingGeneralAndAdministrativeExpenses: z.number(),
  otherExpenses: z.number(),
  operatingExpenses: z.number(),
  costAndExpenses: z.number(),
  interestIncome: z.number(),
  interestExpense: z.number(),
  depreciationAndAmortization: z.number(),
  ebitda: z.number(),
  ebitdaratio: z.number(),
  operatingIncome: z.number(),
  operatingIncomeRatio: z.number(),
  totalOtherIncomeExpensesNet: z.number(),
  incomeBeforeTax: z.number(),
  incomeBeforeTaxRatio: z.number(),
  incomeTaxExpense: z.number(),
  netIncome: z.number(),
  netIncomeRatio: z.number(),
  eps: z.number(),
  epsdiluted: z.number(),
  weightedAverageShsOut: z.number(),
  weightedAverageShsOutDil: z.number(),
  link: z.string().nullable(),
  finalLink: z.string().nullable(),
}) satisfies ZodType<IncomeStatement>;

export const BalanceSheetStatementSchema = z.object({
  date: z.coerce.date(),
  symbol: z.string(),
  reportedCurrency: z.string(),
  cik: z.string(),
  fillingDate: z.coerce.date(),
  acceptedDate: z.coerce.date(),
  calendarYear: z.string(),
  period: z.string(),
  cashAndCashEquivalents: z.number(),
  shortTermInvestments: z.number(),
  cashAndShortTermInvestments: z.number(),
  netReceivables: z.number(),
  inventory: z.number(),
  otherCurrentAssets: z.number(),
  totalCurrentAssets: z.number(),
  propertyPlantEquipmentNet: z.number(),
  goodwill: z.number(),
  intangibleAssets: z.number(),
  goodwillAndIntangibleAssets: z.number(),
  longTermInvestments: z.number(),
  taxAssets: z.number(),
  otherNonCurrentAssets: z.number(),
  totalNonCurrentAssets: z.number(),
  otherAssets: z.number(),
  totalAssets: z.number(),
  accountPayables: z.number(),
  shortTermDebt: z.number(),
  taxPayables: z.number(),
  deferredRevenue: z.number(),
  otherCurrentLiabilities: z.number(),
  totalCurrentLiabilities: z.number(),
  longTermDebt: z.number(),
  deferredRevenueNonCurrent: z.number(),
  deferredTaxLiabilitiesNonCurrent: z.number(),
  otherNonCurrentLiabilities: z.number(),
  totalNonCurrentLiabilities: z.number(),
  otherLiabilities: z.number(),
  capitalLeaseObligations: z.number(),
  totalLiabilities: z.number(),
  preferredStock: z.number(),
  commonStock: z.number(),
  retainedEarnings: z.number(),
  accumulatedOtherComprehensiveIncomeLoss: z.number(),
  othertotalStockholdersEquity: z.number(),
  totalStockholdersEquity: z.number(),
  totalEquity: z.number(),
  totalLiabilitiesAndStockholdersEquity: z.number(),
  minorityInterest: z.number(),
  totalLiabilitiesAndTotalEquity: z.number(),
  totalInvestments: z.number(),
  totalDebt: z.number(),
  netDebt: z.number(),
  link: z.string().nullable(),
  finalLink: z.string().nullable(),
}) satisfies ZodType<BalanceSheetStatement>;

export const CashFlowStatementSchema = z.object({
  date: z.coerce.date(),
  symbol: z.string(),
  reportedCurrency: z.string(),
  cik: z.string(),
  fillingDate: z.coerce.date(),
  acceptedDate: z.coerce.date(),
  calendarYear: z.string(),
  period: z.string(),
  netIncome: z.number(),
  depreciationAndAmortization: z.number(),
  deferredIncomeTax: z.number(),
  stockBasedCompensation: z.number(),
  changeInWorkingCapital: z.number(),
  accountsReceivables: z.number(),
  inventory: z.number(),
  accountsPayables: z.number(),
  otherWorkingCapital: z.number(),
  otherNonCashItems: z.number(),
  netCashProvidedByOperatingActivities: z.number(),
  investmentsInPropertyPlantAndEquipment: z.number(),
  acquisitionsNet: z.number(),
  purchasesOfInvestments: z.number(),
  salesMaturitiesOfInvestments: z.number(),
  otherInvestingActivites: z.number(),
  netCashUsedForInvestingActivites: z.number(),
  debtRepayment: z.number(),
  commonStockIssued: z.number(),
  commonStockRepurchased: z.number(),
  dividendsPaid: z.number(),
  otherFinancingActivites: z.number(),
  netCashUsedProvidedByFinancingActivities: z.number(),
  effectOfForexChangesOnCash: z.number(),
  netChangeInCash: z.number(),
  cashAtEndOfPeriod: z.number(),
  cashAtBeginningOfPeriod: z.number(),
  operatingCashFlow: z.number(),
  capitalExpenditure: z.number(),
  freeCashFlow: z.number(),
  link: z.string().nullable(),
  finalLink: z.string().nullable(),
}) satisfies ZodType<CashFlowStatement>;

export const FinancialsSchema = z.object({
  income: z.array(IncomeStatementSchema),
  balance: z.array(BalanceSheetStatementSchema),
  cash: z.array(CashFlowStatementSchema),
}) satisfies ZodType<Financials>;

export const SecFilingSchema = z.object({
  symbol: z.string(),
  fillingDate: z.coerce.date(),
  acceptedDate: z.coerce.date(),
  cik: z.string(),
  type: z.string(),
  link: z.string(),
  finalLink: z.string(),
}) satisfies ZodType<SecFiling>;

export const FinancialGrowthSchema = z.object({
  symbol: z.string(),
  date: z.coerce.date(),
  calendarYear: z.string(),
  period: z.string(),
  revenueGrowth: z.number().nullable(),
  grossProfitGrowth: z.number().nullable(),
  ebitgrowth: z.number().nullable(),
  operatingIncomeGrowth: z.number().nullable(),
  netIncomeGrowth: z.number().nullable(),
  epsgrowth: z.number().nullable(),
  epsdilutedGrowth: z.number().nullable(),
  weightedAverageSharesGrowth: z.number().nullable(),
  weightedAverageSharesDilutedGrowth: z.number().nullable(),
  dividendsperShareGrowth: z.number().nullable(),
  operatingCashFlowGrowth: z.number().nullable(),
  freeCashFlowGrowth: z.number().nullable(),
  tenYRevenueGrowthPerShare: z.number().nullable(),
  fiveYRevenueGrowthPerShare: z.number().nullable(),
  threeYRevenueGrowthPerShare: z.number().nullable(),
  tenYOperatingCFGrowthPerShare: z.number().nullable(),
  fiveYOperatingCFGrowthPerShare: z.number().nullable(),
  threeYOperatingCFGrowthPerShare: z.number().nullable(),
  tenYNetIncomeGrowthPerShare: z.number().nullable(),
  fiveYNetIncomeGrowthPerShare: z.number().nullable(),
  threeYNetIncomeGrowthPerShare: z.number().nullable(),
  tenYShareholdersEquityGrowthPerShare: z.number().nullable(),
  fiveYShareholdersEquityGrowthPerShare: z.number().nullable(),
  threeYShareholdersEquityGrowthPerShare: z.number().nullable(),
  tenYDividendperShareGrowthPerShare: z.number().nullable(),
  fiveYDividendperShareGrowthPerShare: z.number().nullable(),
  threeYDividendperShareGrowthPerShare: z.number().nullable(),
  receivablesGrowth: z.number().nullable(),
  inventoryGrowth: z.number().nullable(),
  assetGrowth: z.number().nullable(),
  bookValueperShareGrowth: z.number().nullable(),
  debtGrowth: z.number().nullable(),
  rdexpenseGrowth: z.number().nullable(),
  sgaexpensesGrowth: z.number().nullable(),
}) satisfies ZodType<FinancialGrowth>;

export const BalanceSheetStatementGrowthSchema = z.object({
  date: z.coerce.date(),
  symbol: z.string(),
  calendarYear: z.string(),
  period: z.string(),
  growthCashAndCashEquivalents: z.number().nullable(),
  growthShortTermInvestments: z.number().nullable(),
  growthCashAndShortTermInvestments: z.number().nullable(),
  growthNetReceivables: z.number().nullable(),
  growthInventory: z.number().nullable(),
  growthOtherCurrentAssets: z.number().nullable(),
  growthTotalCurrentAssets: z.number().nullable(),
  growthPropertyPlantEquipmentNet: z.number().nullable(),
  growthGoodwill: z.number().nullable(),
  growthIntangibleAssets: z.number().nullable(),
  growthGoodwillAndIntangibleAssets: z.number().nullable(),
  growthLongTermInvestments: z.number().nullable(),
  growthTaxAssets: z.number().nullable(),
  growthOtherNonCurrentAssets: z.number().nullable(),
  growthTotalNonCurrentAssets: z.number().nullable(),
  growthOtherAssets: z.number().nullable(),
  growthTotalAssets: z.number().nullable(),
  growthAccountPayables: z.number().nullable(),
  growthShortTermDebt: z.number().nullable(),
  growthTaxPayables: z.number().nullable(),
  growthDeferredRevenue: z.number().nullable(),
  growthOtherCurrentLiabilities: z.number().nullable(),
  growthTotalCurrentLiabilities: z.number().nullable(),
  growthLongTermDebt: z.number().nullable(),
  growthDeferredRevenueNonCurrent: z.number().nullable(),
  growthDeferrredTaxLiabilitiesNonCurrent: z.number().nullable(),
  growthOtherNonCurrentLiabilities: z.number().nullable(),
  growthTotalNonCurrentLiabilities: z.number().nullable(),
  growthOtherLiabilities: z.number().nullable(),
  growthTotalLiabilities: z.number().nullable(),
  growthCommonStock: z.number().nullable(),
  growthRetainedEarnings: z.number().nullable(),
  growthAccumulatedOtherComprehensiveIncomeLoss: z.number().nullable(),
  growthOthertotalStockholdersEquity: z.number().nullable(),
  growthTotalStockholdersEquity: z.number().nullable(),
  growthTotalLiabilitiesAndStockholdersEquity: z.number().nullable(),
  growthTotalInvestments: z.number().nullable(),
  growthTotalDebt: z.number().nullable(),
  growthNetDebt: z.number().nullable(),
}) satisfies ZodType<BalanceSheetStatementGrowth>;

export const IncomeStatementGrowthSchema = z.object({
  date: z.coerce.date(),
  symbol: z.string(),
  calendarYear: z.string(),
  period: z.string(),
  growthRevenue: z.number().nullable(),
  growthCostOfRevenue: z.number().nullable(),
  growthGrossProfit: z.number().nullable(),
  growthGrossProfitRatio: z.number().nullable(),
  growthResearchAndDevelopmentExpenses: z.number().nullable(),
  growthGeneralAndAdministrativeExpenses: z.number().nullable(),
  growthSellingAndMarketingExpenses: z.number().nullable(),
  growthOtherExpenses: z.number().nullable(),
  growthOperatingExpenses: z.number().nullable(),
  growthCostAndExpenses: z.number().nullable(),
  growthInterestExpense: z.number().nullable(),
  growthDepreciationAndAmortization: z.number().nullable(),
  growthEBITDA: z.number().nullable(),
  growthEBITDARatio: z.number().nullable(),
  growthOperatingIncome: z.number().nullable(),
  growthOperatingIncomeRatio: z.number().nullable(),
  growthTotalOtherIncomeExpensesNet: z.number().nullable(),
  growthIncomeBeforeTax: z.number().nullable(),
  growthIncomeBeforeTaxRatio: z.number().nullable(),
  growthIncomeTaxExpense: z.number().nullable(),
  growthNetIncome: z.number().nullable(),
  growthNetIncomeRatio: z.number().nullable(),
  growthEPS: z.number().nullable(),
  growthEPSDiluted: z.number().nullable(),
  growthWeightedAverageShsOut: z.number().nullable(),
  growthWeightedAverageShsOutDil: z.number().nullable(),
}) satisfies ZodType<IncomeStatementGrowth>;

export const CashFlowStatementGrowthSchema = z.object({
  date: z.coerce.date(),
  symbol: z.string(),
  calendarYear: z.string(),
  period: z.string(),
  growthNetIncome: z.number().nullable(),
  growthDepreciationAndAmortization: z.number().nullable(),
  growthDeferredIncomeTax: z.number().nullable(),
  growthStockBasedCompensation: z.number().nullable(),
  growthChangeInWorkingCapital: z.number().nullable(),
  growthAccountsReceivables: z.number().nullable(),
  growthInventory: z.number().nullable(),
  growthAccountsPayables: z.number().nullable(),
  growthOtherWorkingCapital: z.number().nullable(),
  growthOtherNonCashItems: z.number().nullable(),
  growthNetCashProvidedByOperatingActivites: z.number().nullable(),
  growthInvestmentsInPropertyPlantAndEquipment: z.number().nullable(),
  growthAcquisitionsNet: z.number().nullable(),
  growthPurchasesOfInvestments: z.number().nullable(),
  growthSalesMaturitiesOfInvestments: z.number().nullable(),
  growthOtherInvestingActivites: z.number().nullable(),
  growthNetCashUsedForInvestingActivites: z.number().nullable(),
  growthDebtRepayment: z.number().nullable(),
  growthCommonStockIssued: z.number().nullable(),
  growthCommonStockRepurchased: z.number().nullable(),
  growthDividendsPaid: z.number().nullable(),
  growthOtherFinancingActivites: z.number().nullable(),
  growthNetCashUsedProvidedByFinancingActivities: z.number().nullable(),
  growthEffectOfForexChangesOnCash: z.number().nullable(),
  growthNetChangeInCash: z.number().nullable(),
  growthCashAtEndOfPeriod: z.number().nullable(),
  growthCashAtBeginningOfPeriod: z.number().nullable(),
  growthOperatingCashFlow: z.number().nullable(),
  growthCapitalExpenditure: z.number().nullable(),
  growthFreeCashFlow: z.number().nullable(),
}) satisfies ZodType<CashFlowStatementGrowth>;
